/*++----------------------------------------------------------------------------------------------------------------------------------------------------------------------
1. 项目名称：Aggregator标准框架
2. 文件名：src -> application -> routers -> member.js
3. 作者：zhaohuagang@lifang.com
4. 备注：个人中心路由器
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/

/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
加载相关资源
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
import express from "express" ;
import MemberIndexRenderer from "../controllers/member/indexRenderer" ;
import MemberBindRenderer from "../controllers/member/bindRenderer" ;
import MemberArticlesRenderer from "../controllers/member/articlesRenderer" ;
import MemberArticleListApiProvider from "../controllers/member/articleListApiProvider" ;
import MemberArticlePublishRenderer from "../controllers/member/articlePublishRenderer" ;
import MemberArticleReprintRenderer from "../controllers/member/articleReprintRenderer" ;
import MemberProfileRenderer from "../controllers/member/profileRenderer" ;
import MemberProfileEditRenderer from "../controllers/member/profileEditRenderer" ;
import MemberProfileEditApiProvider from "../controllers/member/profileEditApiProvider" ;
import MemberProfileUpdateApiProvider from "../controllers/member/profileUpdateApiProvider" ;
import MemberProfileResultRenderer from "../controllers/member/profileResultRenderer" ;
import MemberDownloadRenderer from "../controllers/member/downloadRenderer" ;
import MemberBindAuthCodeApiProvider from "../controllers/member/bindAuthCodeApiProvider";
import MemberBindSuccessApiProvider from "../controllers/member/bindSuccessApiProvider";
import MemberArticlePublishAccountApiProvider from "../controllers/member/articlePublishAccountApiProvider";
import MemberArticleReprintApiProvider from "../controllers/member/articleReprintApiRenderer";
import MemberArticlePublishSuccessApiProvider from "../controllers/member/articlePublishSuccessApiProvider";
let router = express.Router() ;
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
首页路由规则，openId是通过queryString参数来进行传递的
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
router.get("/member/index", function( req , res , next ) {   
    new MemberIndexRenderer( req , res , next ) ;  
}) ;
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
手机绑定路由规则，openId是通过queryString参数来进行传递的
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
router.get("/member/bind", function( req , res , next ) {   
    new MemberBindRenderer( req , res , next ) ;  
}) ;
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
手机绑定路由规则，获取验证码
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
router.post("/api/member/phoneAuthCode", function( req , res , next ) {   
    new MemberBindAuthCodeApiProvider( req , res , next ) ;  
}) ;
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
手机绑定路由规则，是否绑定成功
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
router.post("/api/member/bindSuccess", function( req , res , next ) {   
    new MemberBindSuccessApiProvider( req , res , next ) ;  
}) ;
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
我的文章路由规则，openId是通过缓存读取的
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
router.get("/member/articles", function( req , res , next ) {   
    new MemberArticlesRenderer( req , res , next ) ;  
}) ;
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
我的文章路由下拉刷新
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
router.post("/api/member/articleList", function( req , res , next ) {   
    new MemberArticleListApiProvider( req , res , next ) ;  
}) ;
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
发布文章路由规则，openId是通过缓存读取的
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
router.get("/member/article/publish", function( req , res , next ) {   
    new MemberArticlePublishRenderer( req , res , next ) ;  
}) ;
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
发布文章路由规则，判断链接是否合理及抓取次数是否到达上限
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
router.get("/api/member/article/publishMember", function( req , res , next ) {   
    new MemberArticlePublishAccountApiProvider( req , res , next ) ;  
}) ;
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
发布文章路由规则，判断抓取文章是否成功
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
router.get("/api/member/publishSuccess", function( req , res , next ) {   
    new MemberArticlePublishSuccessApiProvider( req , res , next ) ;  
}) ;
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
转载文章路由规则，openId是通过缓存读取的，articleId是通过queryString参数进行传递的
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
router.get("/member/article/reprint", function( req , res , next ) {   
    new MemberArticleReprintRenderer( req , res , next ) ;  
}) ;
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
修改文章标题，并发布预览
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
router.get("/api/member/article/reprint", function( req , res , next ) {   
    new MemberArticleReprintApiProvider( req , res , next ) ;  
}) ;
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
个人资料路由规则，openId或者agentId是通过缓存读取的
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
router.get("/member/profile", function( req , res , next ) {   
    new MemberProfileRenderer( req , res , next ) ;  
}) ;
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
完善个人资料路由规则，openId或者agentId是通过缓存读取的
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
router.get("/member/profile/edit", function( req , res , next ) {   
    new MemberProfileEditRenderer( req , res , next ) ;  
}) ;
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
完善个人资料的处理路由规则，openId或者agentId是通过缓存读取的
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
router.post("/api/member/profileEdit", function( req , res , next ) {   
    new MemberProfileEditApiProvider( req , res , next ) ;  
}) ;
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
更新个人资料的处理路由规则，openId或者agentId是通过缓存读取的
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
router.post("/api/member/profileUpdate", function( req , res , next ) {   
    new MemberProfileUpdateApiProvider( req , res , next ) ;  
}) ;
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
完善个人资料审核结果路由规则
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
router.get("/member/profile/result", function( req , res , next ) {   
    new MemberProfileResultRenderer( req , res , next ) ;  
}) ;
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
完善个人资料审核结果路由规则
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
router.get("/member/download", function( req , res , next ) {   
    new MemberDownloadRenderer( req , res , next ) ;  
}) ;

export default router ;
