#!/usr/bin/env node

/*++----------------------------------------------------------------------------------------------------------------------------------------------------------------------
载入相关资源
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
var app = require('../dist/application/app') ;
var debug = require('debug')('http') ;
var http = require('http') ;
/*++----------------------------------------------------------------------------------------------------------------------------------------------------------------------
从环境参数中取到端口值并把她保存在express中
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
var port = normalizePort(process.env.PORT || '3000') ;
app.set('port', port) ;
/*++----------------------------------------------------------------------------------------------------------------------------------------------------------------------
创建http服务器
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
var server = http.createServer(app) ;
/*++----------------------------------------------------------------------------------------------------------------------------------------------------------------------
监听指定的端口
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
server.listen(port) ;
/*++----------------------------------------------------------------------------------------------------------------------------------------------------------------------
错误处理
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
server.on('error', function(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1) ;
      break ;
    case 'EADDRINUSE' :
      console.error(bind + ' is already in use') ;
      process.exit(1) ;
      break ;
    default :
      throw error ;
  }
}) ;

server.on('listening', function() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port ;
  debug('Listening on ' + bind) ;
}) ;
/*++----------------------------------------------------------------------------------------------------------------------------------------------------------------------
定义将提供的端口号转化成一个可用的正常的值的方法
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
function normalizePort(val) {
  var port = parseInt(val, 10) ;
  if (isNaN(port)) {    
    return val ;
  }
  if (port >= 0) {    
    return port ;
  }
  return false ;
}